{
  "languageSwitcher": {
    "english": "English",
    "french": "French",
    "ariaLabel": "Change language"
  },
  "navbar": {
    "brand": "Harry Viennot",
    "about": "About Me",
    "experience": "Experience",
    "projects": "Projects",
    "contact": "Contact",
    "github": "GitHub",
    "linkedin": "LinkedIn"
  },
  "hero": {
    "profileAlt": "Harry Viennot",
    "headline": "Harry Viennot",
    "subtitle": "Software Developer & DevOps Enthusiast",
    "downloadCV": "Download CV",
    "contactInfo": "Contact Info"
  },
  "about": {
    "title": "About Me",
    "description": "I'm a French software engineering student currently studying at McGill University, with a strong background from Epitech. My interests lie in system automation, DevOps, and building impactful digital tools. I enjoy working on challenging projects and believe in clean, efficient code backed by thoughtful design. I'm always eager to collaborate and learn from others."
  },

  "experience": {
    "title": "Professional Experience",
    "readMore": "Read more",
    "bpce": {
      "title": "DevOps Intern",
      "company": "BPCE IT",
      "date": "Oct 2023 â€“ June 2024",
      "description": "Automation of CI/CD pipelines and infrastructure deployment with Kubernetes. Improved internal tools and system performance monitoring.",
      "context": "I joined BPCE IT, the IT services subsidiary of the BPCE banking group, as a DevOps intern in the GPR - Guichet SI Ã‰tablissements team. This team acts as an interface between the group's banks and internal technical teams, with the mission of simplifying and accelerating the deployment of application environments using DevOps practices.",
      "projects": [
        {
          "name": "Adequasys Deployment Automation (Internal HR SaaS)",
          "context": "Adequasys is a modular HR software used by multiple BPCE group entities. Each bank has its own instance requiring regular updates (modules, patches, versions). Previously, each project was manually configured, making deployments slow, error-prone, and hard to maintain.",
          "objective": "The goal was to create a standardized pipeline to automate the creation and updating of deployment chains for over 20 Adequasys projects, reducing manual errors and configuration time.",
          "contributions": [
            "Created a centralized generic deployment template (XLRelease) reusable across all projects.",
            "Developed reusable Jenkins pipelines to provision required services (Jenkins, Bitbucket, XLR/XLD, Artifactory, CyberArk).",
            "Standardized project folder structures and deployment procedures for team consistency.",
            "Wrote detailed documentation to facilitate handover and reuse by other teams."
          ],
          "tools": [
            {
              "name": "XLRelease/XLDeploy",
              "reason": "to orchestrate deployments."
            },
            { "name": "Jenkins", "reason": "to automate deployments." },
            { "name": "Bitbucket", "reason": "to store pipeline templates." },
            {
              "name": "Artifactory",
              "reason": "to store binaries and reference models."
            },
            {
              "name": "MyCloud",
              "reason": "to provision environments on demand."
            },
            { "name": "CyberArk", "reason": "to manage secrets securely." },
            {
              "name": "Confluence",
              "reason": "to document deployment procedures."
            }
          ],
          "methodImage": "adequasys",
          "method": "When the generation script is run for an Adequasys project, it starts by automatically provisioning all necessary services (Bitbucket, Jenkins, XLRelease, etc.) via the MyCloud API if they donâ€™t already exist.\n\nOnce available, the services are initialized, and a fill-and-dispatch script is triggered. This script fetches generic templates for each tool (repo, pipeline, release), fills in project-specific values, and dispatches the results:\n- Jenkinsfile template is pushed to Bitbucket\n- A new Jenkins folder is created\n- A ready-to-use XLRelease template is copied to the appropriate directory\n\nIf the project already exists, provisioning is skipped and the script simply updates the existing services with the latest templates.\n\nðŸ”§ Result: a fully configured environment ready for use in a single run, without manual intervention.",
          "results": [
            "Significant reduction in setup time for new projects (from several days to a few minutes).",
            "Drastic reduction of human errors through automation.",
            "Consistent and standardized pipelines across entities."
          ],
          "challenges": [
            "Making the solution generic while allowing custom overrides per project.",
            "Testing pipelines effectively in a live production-like environment."
          ]
        },
        {
          "name": "UAS Deployment Automation (Website Factory)",
          "context": "Each BPCE entity (Banques Populaires, Caisses dâ€™Ã‰pargne, subsidiaries) previously managed its own WordPress showcase website, leading to inconsistent branding, high costs, and security variability. The Website Factory (UAS) was launched in 2023 to centralize all these websites on a single secure and coherent platform, developed and maintained by BPCE IT.",
          "objective": "Host and manage up to 300 WordPress websites via a shared infrastructure, with tailored environments per entity, ensuring high security, standardization, and ease of maintenance.",
          "contributions": [
            "Finalized the 3-layer architecture for hosting (Presentation / Application / Data).",
            "Deployed and configured dev, preprod, and prod environments for each new website.",
            "Automated Nginx updates via a XLRelease â†’ Jenkins â†’ XLDeploy pipeline.",
            "Built a CLI script to batch update Kubernetes files across multiple sites.",
            "Validated Pull Requests on the UAS Kubernetes repository.",
            "Participated in production deployment of BPCEâ€™s main website (official Paris 2024 partner).",
            "Wrote comprehensive project documentation."
          ],
          "tools": [
            {
              "name": "MyCloud",
              "reason": "to provision resources (load balancers, Nginx servers, SQL clusters)."
            },
            {
              "name": "Kubernetes",
              "reason": "to deploy and orchestrate containerized applications."
            },
            {
              "name": "OpenShift",
              "reason": "to provide a stable, secure PaaS layer over Kubernetes."
            },
            {
              "name": "Bitbucket",
              "reason": "to version configuration files (Kubernetes, Nginx)."
            },
            {
              "name": "XLRelease/XLDeploy",
              "reason": "to orchestrate and execute config deployments."
            },
            {
              "name": "Jenkins",
              "reason": "to package files and trigger deployments."
            },
            {
              "name": "Artifactory",
              "reason": "to store deployment artifacts."
            },
            {
              "name": "MySQL InnoDB Cluster",
              "reason": "to host entity-specific website data with high availability."
            },
            {
              "name": "Nginx",
              "reason": "to handle HTTP traffic and route users to the correct site."
            }
          ],
          "method": null,
          "results": [
            "50% cost reduction per site.",
            "Enhanced security and operational stability.",
            "Standardized environments and deployment processes."
          ],
          "challenges": [
            "Project was in early setup phase when I joined: many unknowns and technical blockers.",
            "High availability and robustness required, especially for BPCEâ€™s main site.",
            "Complex multi-cluster Kubernetes setup with error-prone configurations.",
            "Cross-team coordination and tight delivery deadlines."
          ]
        }
      ]
    },
    "strategin": {
      "title": "Fullstack Developer Intern",
      "company": "Strateg.in",
      "date": "August 2022 â€“ December 2022",
      "description": "Full-stack feature development for client applications using React and Node.js. Collaborated with design and product teams to implement responsive interfaces.",
      "fullDescription": "I joined Strateg.in, a Toulouse-based company specializing in custom software development for SMEs. The company supports small businesses through tailored digital solutions. During my internship, I worked as a full team member, contributing to the entire development lifecycle.",
      "projects": [
        {
          "name": "AEP Formation (e-learning platform + ERP)",
          "context": "AEP Formation is a comprehensive e-learning platform, including a web application for learners and an ERP for instructors and admins. Development was still in early stages when I joined.",
          "objective": "Develop core frontend and backend features for training management, user progress tracking, course recommendations, and content creation.",
          "contributions": [
            "Developed user dashboard showing completed, ongoing, and upcoming courses.",
            "Built a recommendation algorithm based on user history and popular categories.",
            "Implemented user progress tracking across different content types (videos, texts, assignments).",
            "Added multi-status course validation system in the ERP.",
            "Created a smart onboarding form that recommends custom learning paths."
          ],
          "tools": [
            {
              "name": "React / Next.js",
              "reason": "for building user interfaces across app and ERP."
            },
            {
              "name": "Node.js",
              "reason": "for API logic and backend data handling."
            },
            {
              "name": "GitLab",
              "reason": "for version control and CI/CD integration."
            },
            {
              "name": "ClickUp",
              "reason": "for sprint planning and task tracking."
            }
          ],
          "method": "Agile methodology with short sprints, daily stand-ups, and weekly client reviews. Used basic algorithms for content recommendation and tracked user progress via an enriched database schema.",
          "results": [
            "Enhanced UX through relevant course suggestions.",
            "Robust and modular progress tracking system implemented.",
            "Full-stack contribution across ERP and learner app."
          ],
          "challenges": [
            "Adapting to different technologies (Next.js, decoupled APIs).",
            "Designing a recommendation system from scratch.",
            "Building features without existing reusable components."
          ]
        },
        {
          "name": "La MÃ©thode Citoyenne",
          "context": "La MÃ©thode Citoyenne is a civic project management tool. The project was in maintenance mode when I joined.",
          "objective": "Fix client-reported bugs and improve PDF/Excel export features for project reporting.",
          "contributions": [
            "Fixed PDF exports by adding missing fields, adjusting tables, and embedding charts.",
            "Developed Excel comparison tool highlighting changes between project versions.",
            "Refactored components to improve stability."
          ],
          "tools": [
            { "name": "React", "reason": "for the application frontend." },
            {
              "name": "Node.js",
              "reason": "for backend logic and file generation."
            },
            { "name": "GitLab", "reason": "for collaborative version control." }
          ],
          "method": "Solo bug-fixing based on client feedback. Manual tests for export validation. Regular iterations integrated into the existing API + APP structure.",
          "results": [
            "Significantly improved PDF/Excel output quality.",
            "Fewer client-reported bugs after updates.",
            "First hands-on experience with software maintenance."
          ],
          "challenges": [
            "Initial lack of experience with PDF/Excel generation.",
            "Understanding undocumented legacy code quickly."
          ]
        },
        {
          "name": "Car Co (React Native mobile app)",
          "context": "Car Co is a mobile app for car enthusiasts to share vehicles, attend events, and interact with the community.",
          "objective": "Fix user-reported bugs and implement minor improvements to enhance mobile UX.",
          "contributions": [
            "Fixed issues with SendInBlue email integration (incomplete data sent).",
            "Added pull-to-refresh functionality.",
            "Added conditional messages for empty content (cars, events).",
            "Enabled event cancellation by users."
          ],
          "tools": [
            { "name": "React Native", "reason": "for mobile app development." },
            {
              "name": "SendInBlue API",
              "reason": "for transactional email sending."
            },
            { "name": "GitLab", "reason": "for collaborative version control." }
          ],
          "method": "Independent work with code review, bug testing, and frequent check-ins with designers and project leads. Used ClickUp for task tracking. Fixes deployed via CI/CD.",
          "results": [
            "Resolved several critical user-reported bugs.",
            "Successfully onboarded to React Native in a professional context.",
            "Gained experience building a public-facing mobile application."
          ],
          "challenges": [
            "Learning a new framework (React Native) on the job.",
            "Debugging an existing mobile codebase with little documentation."
          ]
        }
      ]
    },
    "airbusHackathon": {
      "title": "Hackathon",
      "company": "Airbus Innovation Week",
      "date": "March 2023",
      "link": "https://www.epitech.eu/2023/07/03/hackathon-dairbus-des-tek2-toulousains-repondent-au-defi-lance-par-le-geant-europeen-de-laerospatiale/",
      "github": "https://github.com/harryviennot/supplier-mapping",
      "description": "48h hackathon organized by Airbus focused on OSINT (Open Source Intelligence) for supplier risk monitoring.",
      "context": "As part of the Airbus Innovation Week, Airbus held a 48-hour hackathon in partnership with Epitech Toulouse. The objective was to use publicly available data to improve Airbusâ€™s supplier risk monitoring capabilities. Two themes were proposed: mapping supplier chains and identifying risk signals such as environmental violations or unethical labor practices.",
      "challenge": "Our team was tasked with automatically detecting alerts related to Airbusâ€™s critical suppliers using open source data. The goal was to develop a solution capable of extracting relevant insights from online articles, reports, or geodata and presenting them clearly.",
      "solution": {
        "summary": "We developed a working prototype for visualizing and analyzing supplier risk based on publicly available data.",
        "features": [
          "Web data scraping and enrichment via OSINT APIs",
          "Keyword-based alert system with risk scoring (e.g., pollution, deforestation, labor violations)",
          "Interactive graph displaying supplier dependency relationships",
          "Geographic heatmap showing at-risk industrial sites by region"
        ],
        "techStack": [
          {
            "name": "React",
            "reason": "for rapid development of the interactive front-end."
          },
          {
            "name": "D3.js",
            "reason": "for rendering data visualizations (graph and heatmap)."
          },
          {
            "name": "Python / Node.js",
            "reason": "for scraping data and analyzing public content."
          },
          {
            "name": "OSINT APIs",
            "reason": "to enrich the supplier dataset from public sources."
          }
        ],
        "visuals": [
          {
            "title": "Supplier Dependency Graph",
            "description": "Displays critical relationships between suppliers by specialization (aerostructure, propulsion, etc.) and risk level.",
            "file": "supplier-dependency-graph"
          },
          {
            "title": "Supplier Risk Heatmap",
            "description": "Map of industrial sites with risk color-coding by country, highlighting sensitive areas.",
            "file": "supplier-risk-heatmap"
          }
        ]
      },
      "achievements": [
        "Completed and presented a working prototype to Airbus jury in under 48 hours.",
        "Positive feedback on usability and clarity of the visualizations."
      ]
    }
  },
  "projects": {
    "title": "Projects",
    "mirage": {
      "name": "Mirage",
      "duration": "March 2024 â€“ Present",
      "github": null,
      "overview": "Mirage is a SaaS application that allows users to deploy, configure, and operate contextual AI agents within custom workspaces. The platform centralizes the management of connected services, files, and models to enhance team productivity.",
      "context": "This project was initiated to solve a recurring issue in companies: the siloing of information and the difficulty of leveraging AI in an integrated way. The idea was to create a modular platform that centralizes AI agent configuration, connects them to business tools, and contextualizes internal data. Audience: Technical administrators, customer support teams, internal developers.",
      "app": {
        "summary": "Users can create isolated workspaces to deploy AI agents configured with file context and service connections. Administrators can manage services (Slack, Jira, etc.) via OAuth, import documents for RAG, and configure AI models per workspace.",
        "screenshots": [
          {
            "url": "/screenshots/mirage-dashboard.png",
            "caption": "Super admin dashboard â€“ Service card view"
          },
          {
            "url": "/screenshots/mirage-space-model.png",
            "caption": "Workspace page â€“ Model tab for RAG configuration"
          },
          {
            "url": "/screenshots/mirage-service-form.png",
            "caption": "Service creation â€“ Three-step form"
          }
        ]
      },
      "design": {
        "description": "Design Goals: Clean interface, SaaS dashboard style; Smooth and responsive navigation between pages; Consistent user experience for super admins and workspace admins. Process: I designed the mockups on Figma following a modular structure. Each page is divided into components: service cards, multi-section forms, space pages with tabs (chat, files, models, settings...).",
        "figma": null
      },
      "stack": {
        "frontend": ["Next.js", "React", "TypeScript", "Tailwind CSS"],
        "backend": ["Node.js", "FastAPI", "Redis", "PostgreSQL", "Prisma"],
        "devops": ["GitHub Actions", "Docker"],
        "ai": [
          "OpenAI API",
          "RAG (Retrieval-Augmented Generation)",
          "Langchain (upcoming)"
        ],
        "apis": [],
        "libraries": [],
        "tools": []
      },
      "architecture": {
        "text": "Structure: Mirage is organized as multi-tenant with isolated workspaces. Each space can manage its files, models, and service connections via OAuth2 connectors. Data Flow: User queries are handled server-side, enriched via a RAG engine based on imported files, then sent to OpenAI's API. Files are segmented and vectorized in advance.",
        "diagram": null
      },
      "challenges": [
        "Designing a flexible interface to handle various service types",
        "Integrating dynamic authentication configuration (OAuth2, static tokens...)",
        "Optimizing vectorization and contextual retrieval for the RAG system"
      ]
    },
    "moviematch": {
      "name": "Movie Match",
      "duration": "September 2022 â€“ Present",
      "github": null,
      "overview": "Movie Match is a mobile app designed to help friends and families choose a movie to watch together. It combines a swiping system inspired by dating apps and real-time updates on swiped movies.",
      "context": "This project was born out of frustration from spending too much time choosing the perfect movie across streaming platforms. I wanted to gather all movies in one place and gamify the experience. It was also a way to improve my design skills and learn more about React Native animations and real-time data sync.",
      "app": {
        "summary": "The user starts a lobby by choosing available streaming platforms, and others can join using a game pin. Once connected, the admin starts the game and users select preferred genres. Movies are recommended based on the most compatible genre mix. Swiped-right movies are added to a playlist visible to all.",
        "screenshots": [
          {
            "url": "/screenshots/movie-match-lobby.png",
            "caption": "Lobby"
          }
        ]
      },
      "design": {
        "description": "I wanted a playful cinema-inspired ambiance. I chose a dark theme and game-like font. The movie card shows key info at a glance, with details like synopsis, platforms, and IMDb links on the flip side.",
        "figma": "https://www.figma.com/design/FemeYv6ANlWLGDvwfXAs7s/Movie-Match?node-id=0-1&t=Biku71eBnypPWQaR-1"
      },
      "stack": {
        "frontend": ["React Native", "Expo"],
        "backend": ["Python FastAPI", "MongoDB", "Firebase"],
        "apis": [
          "Streaming Availability (RapidAPI)",
          "TheMovieDatabase",
          "OMDB"
        ]
      },
      "architecture": {
        "text": "Text",
        "diagram": "/diagrams/movie-match.png"
      },
      "challenges": [
        "Combining multiple free or low-cost APIs to avoid IMDb's â‚¬300,000 license",
        "Designing an effective recommendation algorithm with limited data"
      ]
    },
    "botbutler": {
      "name": "BotButler",
      "duration": "January 2023 â€“ Present",
      "github": "https://github.com/BitBricoleurs/AREA-MOBILE",

      "overview": "BotButler is an AI assistant platform that connects to internal tools (Slack, Jira, Notion, etc.) to automate workflows, provide contextual answers, and act proactively.",
      "context": "This tool was designed to help companies leverage internal data via AI while keeping control over permissions and tool connections. It's part of an AI-augmented productivity approach for distributed teams. Audience: SMEs, product teams, support teams, or any company using multiple SaaS tools with complex internal knowledge.",
      "app": {
        "summary": "Administrators can configure AI agents that connect to services via OAuth, ingest company documents for context, and define custom actions. Users interact with agents via Slack or web interfaces to get instant answers about internal documentation or trigger workflow actions.",
        "screenshots": [
          {
            "url": "/screenshots/botbutler-agent-view.png",
            "caption": "AI Agent view â€“ connection status and logs"
          },
          {
            "url": "/screenshots/botbutler-action-config.png",
            "caption": "Custom action configuration for Jira and Slack"
          },
          {
            "url": "/screenshots/botbutler-context-editor.png",
            "caption": "Context editor â€“ file ingestion and metadata"
          }
        ]
      },
      "design": {
        "description": "Design Goals: Create a minimalist interface where admins can manage each AI agent; Highlight active service connections (Slack, Jira...); Provide real-time visual feedback on AI queries. Process: I first mapped the conversational architecture and typical use cases (answering questions, triggering actions, returning files).",
        "figma": null
      },
      "stack": {
        "frontend": ["React", "TypeScript", "Tailwind CSS"],
        "backend": ["Node.js", "Express", "PostgreSQL"],
        "ai": [
          "OpenAI API",
          "Langchain (upcoming)",
          "Vector Stores (Pinecone, Redis)"
        ],
        "apis": ["Slack API", "Jira REST API", "OAuth 2.0", "Webhook Handlers"],
        "devops": [],
        "libraries": [],
        "tools": []
      },
      "architecture": {
        "text": "Structure: Each AI agent runs in an isolated environment with its own services, files, and logs. The central system manages OAuth, endpoint configuration, and vector sync. User queries go through a parser, RAG layer, then OpenAI. Data Flow: User submits a query via Slack or web. The agent checks permissions, retrieves context from a vector store, generates a response via OpenAI, and performs actions.",
        "diagram": null
      },
      "challenges": [
        "Implementing fine-grained permissions between agents, users, and services",
        "Maintaining consistent context-aware answers with long/ambiguous documents",
        "Ensuring OAuth and action security"
      ]
    },
    "switchecs": {
      "name": "Switchecs",
      "duration": "February 2022",
      "github": "https://github.com/harryviennot/switchecs",
      "overview": "Switchecs is an original online chess game where the board randomly flips, forcing players to constantly adapt their strategy.",
      "context": "This project was born from a 24-hour Epitech Game Jam challenge. The subject was \"black and white\" and was open to any interpretation. Our group of four decided to make a twist on the most popular black and white game: chess. We wanted to create a game that was fun and challenging, and that would be easy to play.",
      "app": {
        "summary": "Players engage in an online two-player chess match where every few moves, the board flips orientation. This forces players to reassess their strategy from a new perspective. The game tracks move history and ensures all chess rules are properly enforced despite the orientation changes.",
        "screenshots": [
          {
            "url": "/screenshots/switchecs-board.png",
            "caption": "Game board in session"
          },
          {
            "url": "/screenshots/switchecs-flip.png",
            "caption": "Board flip animation"
          },
          {
            "url": "/screenshots/switchecs-history.png",
            "caption": "Move history on right"
          }
        ]
      },
      "design": {
        "description": "As time was limited, we focused on the game mechanics and used an existing chessboard library. We wanted to keep the game simple and easy to play, so we didn't add too many features.",
        "figma": null
      },
      "stack": {
        "frontend": ["React", "JavaScript", "CSS Modules"],
        "backend": ["Express", "Socket.io"],
        "apis": [],
        "libraries": ["chess.js", "react-chessboard"],
        "tools": [],
        "devops": [],
        "ai": []
      },
      "architecture": {
        "text": "The game follows a client-server architecture. The client is a React app that uses the chessboard library to display the game. The server is an Express app that handles the game logic and the Socket.io connections.",
        "diagram": null
      },
      "challenges": [
        "Syncing game state with orientation changes",
        "Keeping interface intuitive despite visual flips",
        "Understanding Fen notation and rewriting all chess logic"
      ]
    }
  },
  "education": {
    "title": "Education",
    "mcgill": {
      "institution": "McGill University",
      "degree": "Certificate in Management",
      "year": "2024â€“2025",
      "description": "Exchange year focusing on strategic management and international business."
    },
    "epitech": {
      "institution": "Epitech â€“ European Institute of Technology",
      "degree": "Master's in Software Engineering",
      "year": "2021â€“2026",
      "description": "Project-based learning with emphasis on collaboration, algorithms, systems, and software architecture."
    }
  },
  "extras": {
    "title": "Extras",
    "languages": {
      "title": "French (Native), English (Fluent), Spanish (Intermediate)",
      "category": "Languages",
      "description": "Comfortable working in multilingual environments"
    },
    "certification": {
      "title": "AWS Certified Developer Associate",
      "category": "Certification",
      "description": "Obtained in 2023"
    },
    "volunteer": {
      "title": "Tech Volunteer at CodeForAll",
      "category": "Volunteer",
      "description": "Teaching coding to underprivileged youth"
    }
  },
  "contact": {
    "title": "Contact Me",
    "getInTouch": "Get in Touch",
    "emailAddress": "harry.viennot@example.com",
    "githubHandle": "github.com/harryviennot",
    "linkedinHandle": "linkedin.com/in/harry-viennot",
    "sendMessageTitle": "Send a Message",
    "form": {
      "nameLabel": "Name",
      "emailLabel": "Email",
      "messageLabel": "Message",
      "sendButton": "Send Message"
    }
  },
  "experienceDetailPage": {
    "notFound": {
      "title": "Experience not found",
      "message": "The experience you're looking for doesn't exist."
    },
    "backToExperience": "Back to Experience",
    "overviewTitle": "Overview",
    "toolsTitle": "Tools & Technologies",
    "project": {
      "title": "Projects",
      "context": "Context",
      "objective": "Objective",
      "contributions": "Contributions",
      "tools": "Tools & Technologies",
      "method": "Method",
      "results": "Results",
      "challenges": "Challenges"
    },
    "contextTitle": "Context",
    "challengeTitle": "Challenge",
    "solutionTitle": "Solution"
  },
  "hackathonDetailPage": {
    "notFound": {
      "title": "Hackathon not found",
      "message": "The hackathon you're looking for doesn't exist."
    },
    "backToExperiences": "Back to Experience",
    "article": "Article",
    "context": "Context",
    "challenge": "Challenge",
    "solution": "Solution",
    "functionality": "Main functionalities",
    "techStackTitle": "Tools & Technologies",
    "screenshots": "Screenshots",
    "achievements": "Achievements"
  },
  "projectDetailPage": {
    "notFound": {
      "title": "Project not found",
      "message": "The project you're looking for doesn't exist."
    },
    "backToProjects": "Back to Projects",
    "overviewTitle": "The App",
    "techStackTitle": "Tech Stack",
    "descriptionTitle": "Description",
    "screenshotsTitle": "Screenshots",
    "screenshotAltText": "{{projectName}} screenshot {{number}}",
    "linksTitle": "Links",
    "viewSourceGithub": "View source code on GitHub"
  },
  "app": {
    "loading": "Loading..."
  }
}
